<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
	<component name="AnalysisUIOptions">
		<option name="SPLITTER_PROPORTION" value="0.26758242"/>
		<option name="SCOPE_TYPE" value="8"/>
		<option name="CUSTOM_SCOPE_NAME" value="All Sources"/>
		<option name="SHOW_STRUCTURE" value="true"/>
	</component>
	<component name="ChangeListManager">
		<option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true"/>
		<option name="SHOW_DIALOG" value="false"/>
		<option name="HIGHLIGHT_CONFLICTS" value="true"/>
		<option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false"/>
		<option name="LAST_RESOLUTION" value="IGNORE"/>
	</component>
	<component name="CoverageOptionsProvider">
		<option name="myAddOrReplace" value="0"/>
	</component>
	<component name="ExportTestResults" outputFolder="$PROJECT_DIR$/tmp/test_results" openResultsInEditor="true" userTempatePath=""/>
	<component name="FavoritesManager">
		<favorites_list name="tree-state-manager"/>
	</component>
	<component name="Git.Settings">
		<option name="PREVIEW_PUSH_PROTECTED_ONLY" value="true"/>
		<option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$"/>
	</component>
	<component name="JsFlowSettings">
		<service-enabled>true</service-enabled>
		<exe-path/>
		<other-services-enabled>true</other-services-enabled>
		<auto-save>true</auto-save>
	</component>
	<component name="NamedScopeManager">
		<scope name="src-main" pattern="file[webrain]:src/main//*"/>
		<scope name="src-test" pattern="file[webrain]:src/test//*"/>
		<scope name="All Sources" pattern="file[webrain]:*/&amp;&amp;!file[webrain]:.idea//*&amp;&amp;!file[webrain]:_trash//*&amp;&amp;!file[webrain]:node_modules//*&amp;&amp;!file[webrain]:tmp//*&amp;&amp;!file[webrain]:dist//*&amp;&amp;!file[webrain]:docs//*&amp;&amp;!file[webrain]:env/polyfill//*&amp;&amp;!file:src/test/performance/node/src/SetPolyfill.js"/>
	</component>
	<component name="ProjectId" id="1PtsejVw06ohrapYkJyh68Uo1Ck"/>
	<component name="ProjectLevelVcsManager" settingsEditedManually="true">
		<ConfirmationsSetting value="2" id="Add"/>
	</component>
	<component name="PropertiesComponent">
		<property name="NewWatcherDialog.advanced.open" value="true"/>
		<property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true"/>
		<property name="WebServerToolWindowFactoryState" value="false"/>
		<property name="auto.test.manager.delay" value="5000"/>
		<property name="javascript.karma.karma_node_package_dir" value=""/>
		<property name="last_opened_file_path" value="$PROJECT_DIR$"/>
		<property name="node.js.detected.package.eslint" value="true"/>
		<property name="node.js.detected.package.standard" value="true"/>
		<property name="node.js.detected.package.tslint" value="true"/>
		<property name="node.js.path.for.package.eslint" value="node"/>
		<property name="node.js.path.for.package.standard" value="node"/>
		<property name="node.js.path.for.package.tslint" value="project"/>
		<property name="node.js.selected.package.eslint" value="$PROJECT_DIR$/../../templates/nodejs-templates/node_modules/eslint"/>
		<property name="node.js.selected.package.standard" value="L:\Work\_GIT\GitHub\NodeJs\templates\nodejs-templates\node_modules\eslint"/>
		<property name="node.js.selected.package.tslint" value="(autodetect)"/>
		<property name="nodejs.mocha.mocha_node_package_dir" value="$PROJECT_DIR$/node_modules/mocha"/>
		<property name="nodejs_package_manager_path" value="npm"/>
		<property name="prettierjs.PrettierConfiguration.Package" value="L:\Work\_GIT\GitHub\NodeJs\modules\webrain\node_modules\prettier"/>
		<property name="restartRequiresConfirmation" value="false"/>
		<property name="run.code.analysis.last.selected.profile" value="pProject Default"/>
		<property name="settings.editor.selected.configurable" value="watcher.settings"/>
		<property name="ts.external.directory.path" value="L:\Work\_GIT\GitHub\NodeJs\modules\webrain\node_modules\typescript\lib"/>
	</component>
	<component name="RunManager" selected="Karma.Dev">
		<configuration default="true" type="JavaScriptTestRunnerKarma">
			<config-file value="$PROJECT_DIR$/env/karma/karma.conf.tests.js"/>
			<karma-package-dir value="$PROJECT_DIR$/node_modules/karma"/>
			<node-interpreter value="node"/>
			<envs/>
			<method v="2"/>
		</configuration>
		<configuration name="browser > main > index" type="JavaScriptTestRunnerKarma" temporary="true" nameIsGenerated="true">
			<config-file value="$PROJECT_DIR$/env/karma/karma.conf.tests.js"/>
			<karma-package-dir value="$PROJECT_DIR$/node_modules/karma"/>
			<working-directory value="$PROJECT_DIR$"/>
			<node-interpreter value="node"/>
			<envs/>
			<scope-kind value="SUITE"/>
			<test-names>
				<test-name value="browser > main > index"/>
			</test-names>
			<method v="2"/>
		</configuration>
		<configuration default="true" type="NodeJSConfigurationType" path-to-node="node" node-parameters="--max-old-space-size=4096" working-dir="$PROJECT_DIR$">
			<method v="2"/>
		</configuration>
		<configuration name="DeferredCalc (Coverage)" type="mocha-javascript-test-runner">
			<node-interpreter>node</node-interpreter>
			<node-options>--max-old-space-size=4096</node-options>
			<mocha-package>$PROJECT_DIR$/node_modules/mocha</mocha-package>
			<working-directory>$PROJECT_DIR$</working-directory>
			<pass-parent-env>true</pass-parent-env>
			<ui>bdd</ui>
			<extra-mocha-options>--opts ./env/mocha/mocha.babel.opts</extra-mocha-options>
			<test-kind>SUITE</test-kind>
			<test-file>$PROJECT_DIR$/src/test/tests/common/main/rx/deferred-calc/DeferredCalc.ts</test-file>
			<test-names>
				<name value="common > main > rx > deferred-calc > DeferredCalc"/>
			</test-names>
			<method v="2"/>
		</configuration>
		<configuration name="L:\Work\_GIT\GitHub\NodeJs\modules\tree-state-manager\src\test\tests\common\main\rx\deep-subscribe\**\*.ts (Coverage)" type="mocha-javascript-test-runner">
			<node-interpreter>node</node-interpreter>
			<node-options>--max-old-space-size=4096</node-options>
			<mocha-package>$PROJECT_DIR$/node_modules/mocha</mocha-package>
			<working-directory>$PROJECT_DIR$</working-directory>
			<pass-parent-env>true</pass-parent-env>
			<ui>bdd</ui>
			<extra-mocha-options>--opts ./env/mocha/mocha.babel.opts --watch</extra-mocha-options>
			<test-kind>PATTERN</test-kind>
			<test-pattern>$PROJECT_DIR$/src/test/tests/common/main/rx/deep-subscribe/**/*.ts</test-pattern>
			<method v="2"/>
		</configuration>
		<configuration name="ObservableObject.test event as object or arguments" type="mocha-javascript-test-runner" temporary="true" nameIsGenerated="true">
			<node-interpreter>node</node-interpreter>
			<node-options>--max-old-space-size=4096</node-options>
			<mocha-package>$PROJECT_DIR$/node_modules/mocha</mocha-package>
			<working-directory>$PROJECT_DIR$</working-directory>
			<pass-parent-env>true</pass-parent-env>
			<ui>bdd</ui>
			<extra-mocha-options>--opts ./env/mocha/mocha.babel.opts --watch</extra-mocha-options>
			<test-kind>TEST</test-kind>
			<test-file>$PROJECT_DIR$/src/test/performance/node/ObservableObject.ts</test-file>
			<test-names>
				<name value="ObservableObject"/>
				<name value="test event as object or arguments"/>
			</test-names>
			<method v="2"/>
		</configuration>
		<configuration default="true" type="mocha-javascript-test-runner">
			<node-interpreter>node</node-interpreter>
			<node-options>--max-old-space-size=4096</node-options>
			<mocha-package>$PROJECT_DIR$/node_modules/mocha</mocha-package>
			<working-directory>$PROJECT_DIR$</working-directory>
			<pass-parent-env>true</pass-parent-env>
			<ui>bdd</ui>
			<extra-mocha-options>--opts ./env/mocha/mocha.babel.opts --watch</extra-mocha-options>
			<test-kind>PATTERN</test-kind>
			<test-pattern>./src/test/tests/{common,node}/**/*.*</test-pattern>
			<method v="2"/>
		</configuration>
		<configuration name="common > main > rx > deep-subscribe > deep-subscribe.object" type="mocha-javascript-test-runner" temporary="true" nameIsGenerated="true">
			<node-interpreter>node</node-interpreter>
			<node-options>--max-old-space-size=4096</node-options>
			<mocha-package>$PROJECT_DIR$/node_modules/mocha</mocha-package>
			<working-directory>$PROJECT_DIR$</working-directory>
			<pass-parent-env>true</pass-parent-env>
			<ui>bdd</ui>
			<extra-mocha-options>--opts ./env/mocha/mocha.babel.opts</extra-mocha-options>
			<test-kind>TEST</test-kind>
			<test-file>$PROJECT_DIR$/src/test/tests/common/main/rx/deep-subscribe/deep-subscribe.ts</test-file>
			<test-names>
				<name value="common > main > rx > deep-subscribe > deep-subscribe"/>
				<name value="object"/>
			</test-names>
			<method v="2"/>
		</configuration>
		<configuration name="deep-subscribe (Coverage)" type="mocha-javascript-test-runner">
			<node-interpreter>node</node-interpreter>
			<node-options>--max-old-space-size=4096</node-options>
			<mocha-package>$PROJECT_DIR$/node_modules/mocha</mocha-package>
			<working-directory>$PROJECT_DIR$</working-directory>
			<pass-parent-env>true</pass-parent-env>
			<ui>bdd</ui>
			<extra-mocha-options>--opts ./env/mocha/mocha.babel.opts</extra-mocha-options>
			<test-kind>TEST_FILE</test-kind>
			<test-file>$PROJECT_DIR$/src/test/tests/common/main/rx/deep-subscribe/deep-subscribe.ts</test-file>
			<method v="2"/>
		</configuration>
		<configuration name="node > main > index.base" type="mocha-javascript-test-runner" temporary="true" nameIsGenerated="true">
			<node-interpreter>node</node-interpreter>
			<node-options>--max-old-space-size=4096</node-options>
			<mocha-package>$PROJECT_DIR$/node_modules/mocha</mocha-package>
			<working-directory>$PROJECT_DIR$</working-directory>
			<pass-parent-env>true</pass-parent-env>
			<ui>bdd</ui>
			<extra-mocha-options>--opts ./env/mocha/mocha.babel.opts</extra-mocha-options>
			<test-kind>TEST</test-kind>
			<test-file>$PROJECT_DIR$/src/test/tests/node/index.ts</test-file>
			<test-names>
				<name value="node > main > index"/>
				<name value="base"/>
			</test-names>
			<method v="2"/>
		</configuration>
		<configuration name="node" type="mocha-javascript-test-runner" temporary="true" nameIsGenerated="true">
			<node-interpreter>node</node-interpreter>
			<node-options>--max-old-space-size=4096</node-options>
			<mocha-package>$PROJECT_DIR$/node_modules/mocha</mocha-package>
			<working-directory>$PROJECT_DIR$</working-directory>
			<pass-parent-env>true</pass-parent-env>
			<ui>bdd</ui>
			<extra-mocha-options>--opts ./env/mocha/mocha.babel.opts</extra-mocha-options>
			<test-kind>SUITE</test-kind>
			<test-file>$PROJECT_DIR$/src/test/tests/node/isNode.js</test-file>
			<test-names>
				<name value="node"/>
			</test-names>
			<method v="2"/>
		</configuration>
		<list>
			<item itemvalue="Karma.Coverage Karma"/>
			<item itemvalue="Karma.Dev"/>
			<item itemvalue="Karma.CI"/>
			<item itemvalue="Karma.Coverage"/>
			<item itemvalue="Karma.Performance"/>
			<item itemvalue="Karma.Tests"/>
			<item itemvalue="Karma.browser > main > index"/>
			<item itemvalue="Mocha.DeferredCalc (Coverage)"/>
			<item itemvalue="Mocha.L:\Work\_GIT\GitHub\NodeJs\modules\tree-state-manager\src\test\tests\common\main\rx\deep-subscribe\**\*.ts (Coverage)"/>
			<item itemvalue="Mocha.Performance"/>
			<item itemvalue="Mocha.deep-subscribe (Coverage)"/>
			<item itemvalue="Mocha.Watch"/>
			<item itemvalue="Mocha.ObservableObject.test event as object or arguments"/>
			<item itemvalue="Mocha.node"/>
			<item itemvalue="Mocha.node > main > index.base"/>
			<item itemvalue="Mocha.common > main > rx > deep-subscribe > deep-subscribe.object"/>
			<item itemvalue="npm.Coverage Mocha Report"/>
		</list>
		<recent_temporary>
			<list>
				<item itemvalue="Mocha.common > main > rx > deep-subscribe > deep-subscribe.object"/>
				<item itemvalue="Mocha.node > main > index.base"/>
				<item itemvalue="Karma.browser > main > index"/>
				<item itemvalue="Mocha.node"/>
				<item itemvalue="Mocha.ObservableObject.test event as object or arguments"/>
			</list>
		</recent_temporary>
	</component>
	<component name="Vcs.Log.History.Properties">
		<option name="COLUMN_ORDER">
			<list>
				<option value="0"/>
				<option value="2"/>
				<option value="3"/>
				<option value="1"/>
			</list>
		</option>
	</component>
	<component name="Vcs.Log.Tabs.Properties">
		<option name="TAB_STATES">
			<map>
				<entry key="1">
					<value>
						<State>
							<option name="SHOW_ONLY_AFFECTED_CHANGES" value="true"/>
							<option name="FILTERS">
								<map>
									<entry key="branch">
										<value>
											<list>
												<option value="HEAD"/>
											</list>
										</value>
									</entry>
									<entry key="roots">
										<value>
											<list>
												<option value="$PROJECT_DIR$"/>
											</list>
										</value>
									</entry>
								</map>
							</option>
						</State>
					</value>
				</entry>
				<entry key="MAIN">
					<value>
						<State>
							<option name="COLUMN_ORDER"/>
						</State>
					</value>
				</entry>
			</map>
		</option>
		<option name="OPEN_TABS">
			<set>
				<option value="1"/>
			</set>
		</option>
	</component>
	<component name="VcsManagerConfiguration">
		<option name="CHECK_CODE_SMELLS_BEFORE_PROJECT_COMMIT" value="false"/>
		<option name="CHECK_NEW_TODO" value="false"/>
		<option name="LAST_COMMIT_MESSAGE" value="Fix package dependencies"/>
		<MESSAGE value="Fix deepSubscribe default property bug"/>
		<MESSAGE value="Found optimize get[propertyName] solution using Function(...)"/>
		<MESSAGE value="ObservableObject optimization"/>
		<MESSAGE value="ObservableObject propertyChanged optimization"/>
		<MESSAGE value="ObservableObject separated performance test"/>
		<MESSAGE value="deepSubscribe little optimization and improved tests"/>
		<MESSAGE value="Improved resolveAsync, now you can use customResolveValue function inside resolveAsync"/>
		<MESSAGE value="Implemented resolvePath"/>
		<MESSAGE value="deepSubscribe performance tests for optimization - delayed, problem with time estimation accuracy"/>
		<MESSAGE value="resolvePath completed and tested"/>
		<MESSAGE value="resolvePath performance test"/>
		<MESSAGE value="deepSubscribe optimization in process..."/>
		<MESSAGE value="deepSubscribe optimization is completed. Node Tests OK."/>
		<MESSAGE value="Code Inspection"/>
		<MESSAGE value="Fill package info"/>
		<MESSAGE value="deepSubscribe: Used delete operator to prevent possibility of memory overflow"/>
		<MESSAGE value="Arguments as object performance test - result: propertyChanged event remains an object. No performance difference in Chromium 33 (Android 4.4)"/>
		<MESSAGE value="Transfer CalcProperty value optimization. Now it will calc only if value needed."/>
		<MESSAGE value="Implemented CalcObjectDebugger, ISerializableObservableObject interface and calcChanges property for this interface"/>
		<MESSAGE value="Created entry point"/>
		<MESSAGE value="Build refactoring"/>
		<MESSAGE value="Fix CalcObjectDebugger"/>
		<MESSAGE value="Fix main facade"/>
		<MESSAGE value="Build refactoring. Build OK."/>
		<MESSAGE value="Fix package dependencies"/>
	</component>
	<component name="com.intellij.coverage.CoverageDataManagerImpl">
		<SUITE FILE_PATH="coverage/webrain$L__Work__GIT_GitHub_NodeJs_modules_tree_state_manager_src_test_tests_common_main_rx_deep_subscribe______ts__Coverage_.dat" NAME="L:\Work\_GIT\GitHub\NodeJs\modules\tree-state-manager\src\test\tests\common\main\rx\deep-subscribe\**\*.ts (Coverage) Coverage Results" MODIFIED="1567218889155" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="MochaJavaScriptTestRunnerCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false"/>
		<SUITE FILE_PATH="coverage/tree_state_manager$L__Work__GIT_GitHub_NodeJs_modules_tree_state_manager_src_test_tests_common_main_rx_deep_subscribe______ts__Coverage_.dat" NAME="L:\Work\_GIT\GitHub\NodeJs\modules\tree-state-manager\src\test\tests\common\main\rx\deep-subscribe\**\*.ts (Coverage) Coverage Results" MODIFIED="1566748268430" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="MochaJavaScriptTestRunnerCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false"/>
		<SUITE FILE_PATH="coverage/webrain$ObservableObject_deepSubscribe_memory.dat" NAME="ObservableObject.deepSubscribe memory Coverage Results" MODIFIED="1567250223332" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="MochaJavaScriptTestRunnerCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false"/>
		<SUITE FILE_PATH="coverage/webrain$fundamental_operations_ObservableObject.dat" NAME="fundamental-operations.ObservableObject Coverage Results" MODIFIED="1567092876402" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="MochaJavaScriptTestRunnerCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false"/>
		<SUITE FILE_PATH="coverage/webrain$resolvePath.dat" NAME="resolvePath Coverage Results" MODIFIED="1567168357204" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="MochaJavaScriptTestRunnerCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false"/>
		<SUITE FILE_PATH="coverage/webrain$ObservableObject_propertyChanged_memory.dat" NAME="ObservableObject.propertyChanged memory Coverage Results" MODIFIED="1567179257245" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="MochaJavaScriptTestRunnerCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false"/>
		<SUITE FILE_PATH="coverage/webrain$ObservableObject_deepSubscribe.dat" NAME="ObservableObject.deepSubscribe Coverage Results" MODIFIED="1567141941071" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="MochaJavaScriptTestRunnerCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false"/>
	</component>
</project>